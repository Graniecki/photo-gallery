{"version":3,"sources":["components/Navigation/Navigation.jsx","components/Pagination/Pagination.jsx","components/Settings/Settings.jsx","components/Context.js","components/Images/Images.jsx","components/Favourite/Favourite.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navigation","useState","selected","setSelected","className","to","classNames","onClick","Pagination","paginate","pageNumbers","Array","keys","map","number","Settings","imagesPerPage","setPostsPerPage","onSubmit","event","preventDefault","value","target","querySelector","htmlFor","type","id","min","max","defaultValue","Context","React","createContext","Images","images","setImages","loading","setLoading","currentPage","setCurrentPage","url","useEffect","a","fetch","then","response","json","result","fetchImages","currentImages","slice","useContext","likes","setLikes","addLikePhoto","imageBlock","closest","src","heart","style","opacity","setTimeout","some","photo","current","image","onDoubleClick","download_url","alt","pageNumber","Favourite","removePhoto","nextSibling","parentElement","filter","visibleRemove","unvisibleRemove","onMouseOver","onMouseLeave","length","App","Provider","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a65430b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport './Navigation.css';\n\nexport const Navigation = () => {\n  const [selected, setSelected] = useState(true);\n\n  return (\n    <nav className=\"navigation\">\n      <ul className=\"navigation-list\">\n        <Link to=\"/favourite\">\n          <li\n            className={classNames({\n              \"navigation-item\": true,\n              \"selected\": selected,\n            })}\n            onClick={() => setSelected(true)}\n          >\n            Gallery\n          </li>\n        </Link>\n        <Link to=\"/favourite\">\n          <li\n            className={classNames({\n              \"navigation-item\": true,\n              \"selected\": !selected,\n            })}\n            onClick={() => setSelected(false)}\n          >\n            Favourite\n          </li>\n        </Link>\n      </ul>\n    </nav>\n  );\n};\n","import React from 'react';\nimport './Pagination.css';\n\nexport const Pagination = ({ paginate }) => {\n  const pageNumbers = [...Array(10).keys()];\n\n  return (\n    <nav className=\"pagination\">\n      <ul className=\"pagination-list\">\n        {pageNumbers.map(number => (\n          <li\n            key={number}\n            className=\"pagination-item\"\n            onClick={() => paginate(number + 1)}\n          >\n            {number + 1}\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n","import React from 'react';\nimport './Settings.css';\n\nexport const Settings = ({ imagesPerPage, setPostsPerPage }) => {\n  const changeCount = (event) => {\n    event.preventDefault();\n\n    const { value } = event.target.querySelector('.image-count');\n\n    setPostsPerPage(+value);\n  };\n\n  return (\n    <form\n      className=\"settings\"\n      onSubmit={changeCount}\n    >\n      <label htmlFor=\"picture-count\">\n        Images per page:\n      </label>\n      <input\n        className=\"image-count\"\n        type=\"number\"\n        id=\"picture-count\"\n        min=\"1\"\n        max=\"100\"\n        defaultValue={imagesPerPage}\n      />\n      <button\n        className=\"submit-button\"\n        type=\"submit\"\n      >\n        Save\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\n\nexport const Context = React.createContext([]);\n","import React, { useState, useEffect, useContext } from 'react';\nimport './Images.css';\n\nimport { Pagination } from '../Pagination';\nimport { Settings } from '../Settings';\nimport { Context } from '../Context';\n\nexport const Images = () => {\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [imagesPerPage, setPostsPerPage] = useState(15);\n  const url = `https://picsum.photos/v2/list?page=${currentPage}&limit=100`;\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      setLoading(true);\n      const result = await fetch(url).then(response => response.json());\n      setImages(result);\n      setLoading(false);\n    };\n\n    fetchImages();\n  }, [currentPage]);\n\n  const currentImages = images.slice(0, imagesPerPage);\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n  const { likes, setLikes } = useContext(Context);\n\n  const addLikePhoto = (event) => {\n    const imageBlock = event.target.closest('.image');\n    const src = imageBlock.querySelector('img').src;\n    const heart = imageBlock.querySelector('.heart');\n\n    heart.style.opacity = 1;\n    setTimeout(() => {\n      heart.style.opacity = 0;\n    }, 300);\n\n    if (likes.some(photo => photo === src)) {\n      return;\n    }\n\n    setLikes(current => [src, ...current]);\n  };\n\n  if (loading) {\n    return <h2 className=\"loading\">Loading ...</h2>;\n  }\n\n  return (\n    <>\n      <Settings\n        imagesPerPage={imagesPerPage}\n        setPostsPerPage={setPostsPerPage}\n      />\n      <div className=\"images\">\n        {currentImages.map(image => (\n          <div\n            key={image.id}\n            className=\"image\"\n            onDoubleClick={addLikePhoto}\n          >\n            <img src={image.download_url} alt=\"something-beauty\" />\n            <span className=\"heart\">&#10084;</span>\n          </div>\n        ))}\n      </div>\n      <Pagination\n        paginate={paginate}\n      />\n    </>\n  );\n};\n","import React, { useContext } from 'react';\nimport './Favourite.css';\n\nimport { Context } from '../Context';\n\nexport const Favourite = () => {\n  const { likes, setLikes } = useContext(Context);\n  const removePhoto = (event) => {\n    const { src } = event.target.nextSibling;\n\n    event.target.parentElement.style.opacity = 0;\n    setTimeout(() => {\n      setLikes(likes.filter(photo => photo !== src));\n    }, 400);\n  };\n  const visibleRemove = (event) => {\n    const likesPhoto = event.target.parentElement;\n    const removePhoto = likesPhoto.querySelector('.remove-photo');\n\n    removePhoto.style.opacity = 1;\n  };\n  const unvisibleRemove = (event) => {\n    const likesPhoto = event.target.parentElement;\n    const removePhoto = likesPhoto.querySelector('.remove-photo');\n\n    removePhoto.style.opacity = 0;\n  };\n\n  return (\n    <>\n      <div className=\"likes-photos\">\n        {likes.map(photo => (\n          <div\n            key={photo}\n            className=\"likes-photo\"\n            onMouseOver={visibleRemove}\n            onMouseLeave={unvisibleRemove}\n          >\n            <div\n              className=\"remove-photo\"\n              onClick={removePhoto}\n            >\n              &#10006;\n            </div>\n            <img src={photo} alt=\"something-beauty\" />\n          </div>\n        ))}\n      </div>\n      {likes.length === 0 && (\n        <div className=\"no-likes\">\n          <span className=\"title\">No favorite photos yet!</span>\n          <span className=\"smile\">&#129320;</span>\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nimport { Navigation } from './components/Navigation';\nimport { Images } from './components/Images';\nimport { Favourite } from './components/Favourite';\nimport { Context } from './components/Context';\n\nfunction App() {\n  const [likes, setLikes] = useState([]);\n\n  return (\n    <Context.Provider value={{ likes, setLikes }}>\n      <Router>\n        <div className=\"App\">\n          <h1>Photo gallery</h1>\n          <Navigation />\n        </div>\n        <Switch>\n          <Route exact path=\"/photo-gallery\" component={Images} />\n          <Route exact path=\"/favourite\" component={Favourite} />\n        </Switch>\n      </Router>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}