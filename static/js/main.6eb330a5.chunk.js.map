{"version":3,"sources":["components/useLocalStorage.jsx","components/Navigation/Navigation.jsx","components/Pagination/Pagination.jsx","components/Settings/Settings.jsx","components/Gallery/Gallery.jsx","components/Favourite/Favourite.jsx","components/FullScreen/FullScreen.jsx","App.js","reportWebVitals.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","JSON","parse","localStorage","getItem","value","setValue","setItem","stringify","Navigation","favouriteOn","setFavouriteOn","className","onClick","classNames","Pagination","currentPage","setCurrentPage","pageNumbers","Array","keys","map","number","Settings","imagesPerPage","setImagesPerPage","onSubmit","event","preventDefault","target","querySelector","htmlFor","type","id","min","max","defaultValue","Gallery","likes","setLikes","setFullScreenImg","setOpenFullScreen","images","setImages","loading","setLoading","url","currentImages","slice","useEffect","a","fetch","then","response","json","result","fetchImages","addLikePhoto","src","currentTarget","heart","style","opacity","setTimeout","some","photo","fullScreen","parentElement","image","onDoubleClick","download_url","alt","Favourite","removePhoto","removeIcon","nextSibling","filter","length","FullScreen","fullScreenImg","openFullScreen","closeFullScreen","display","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6eb330a5.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst useLocalStorage = (key, initialValue) => {\n  const [value, setValue] = useState(\n    JSON.parse(localStorage.getItem(key)) || initialValue\n  );\n\n  const save = (value) => {\n    setValue(value);\n    localStorage.setItem(key, JSON.stringify(value));\n  };\n\n  return [value, save];\n};\n\nexport default useLocalStorage;\n","import React from 'react';\nimport classNames from 'classnames';\nimport './Navigation.css';\n\nexport const Navigation = ({ favouriteOn, setFavouriteOn }) => {\n  return (\n    <nav className=\"navigation\">\n      <ul className=\"navigation-list\">\n        <li\n          onClick={() => setFavouriteOn(false)}\n          className={classNames({\n            \"navigation-item\": true,\n            \"selected\": !favouriteOn,\n          })}\n        >\n          Gallery\n        </li>\n        <li\n          onClick={() => setFavouriteOn(true)}\n          className={classNames({\n            \"navigation-item\": true,\n            \"selected\": favouriteOn,\n          })}\n        >\n          Favourite\n        </li>\n      </ul>\n    </nav>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport './Pagination.css';\n\nexport const Pagination = ({ currentPage, setCurrentPage }) => {\n  const pageNumbers = [...Array(10).keys()];\n\n  return (\n    <nav className=\"pagination\">\n      <ul className=\"pagination-list\">\n        {pageNumbers.map(number => (\n          <li\n            key={number}\n            className={classNames({\n              \"pagination-item\": true,\n              \"selected\": currentPage === (number + 1)\n            })}\n            onClick={() => setCurrentPage(number + 1)}\n          >\n            {number + 1}\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n","import React from 'react';\nimport './Settings.css';\n\nexport const Settings = ({ imagesPerPage, setImagesPerPage }) => {\n  const changeCount = (event) => {\n    event.preventDefault();\n\n    const { value } = event.target.querySelector('.image-count');\n\n    setImagesPerPage(+value);\n  };\n\n  return (\n    <form\n      className=\"settings\"\n      onSubmit={changeCount}\n    >\n      <label htmlFor=\"picture-count\">\n        Images per page:\n      </label>\n      <input\n        className=\"image-count\"\n        type=\"number\"\n        id=\"picture-count\"\n        min=\"1\"\n        max=\"100\"\n        defaultValue={imagesPerPage}\n      />\n      <button\n        className=\"submit-button\"\n        type=\"submit\"\n      >\n        Save\n      </button>\n    </form>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport useLocalStorage from '../useLocalStorage';\nimport './Gallery.css';\n\nimport { Pagination } from '../Pagination';\nimport { Settings } from '../Settings';\n\nexport const Gallery = ({\n  likes,\n  setLikes,\n  setFullScreenImg,\n  setOpenFullScreen\n}) => {\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useLocalStorage('current-page', 1);\n  const [imagesPerPage, setImagesPerPage] = useLocalStorage('images-per-page', 15);\n  const url = `https://picsum.photos/v2/list?page=${currentPage}&limit=100`;\n  const currentImages = images.slice(0, imagesPerPage);\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      setLoading(true);\n      const result = await fetch(url).then(response => response.json());\n      setImages(result);\n      setLoading(false);\n    };\n\n    fetchImages();\n  }, [currentPage]);\n\n  const addLikePhoto = (event) => {\n    const src = event.currentTarget.querySelector('img').src;\n    const heart = event.currentTarget.querySelector('.heart');\n\n    heart.style.opacity = 1;\n\n    setTimeout(() => {\n      heart.style.opacity = 0;\n    }, 300);\n\n    if (likes.some(photo => photo === src)) {\n      return;\n    }\n\n    setLikes([src, ...likes]);\n  };\n\n  const fullScreen = (event) => {\n    const image = event.target.parentElement;\n    const { src } = image.querySelector('img');\n\n    setFullScreenImg(src);\n    setOpenFullScreen(true);\n  };\n\n  if (loading) {\n    return <h2 className=\"loading\">Loading ...</h2>;\n  }\n\n  return (\n    <>\n      <Settings\n        imagesPerPage={imagesPerPage}\n        setImagesPerPage={setImagesPerPage}\n      />\n      <div className=\"images\">\n        {currentImages.map(image => (\n          <div\n            key={image.id}\n            className=\"image\"\n            onDoubleClick={addLikePhoto}\n          >\n            <img src={image.download_url} alt=\"something-beauty\" />\n            <span className=\"heart\">&#10084;</span>\n            <span\n              className=\"fullscreen-icon\"\n              onClick={fullScreen}\n            >\n              &#x26F6;\n            </span>\n          </div>\n        ))}\n      </div>\n      <Pagination\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport './Favourite.css';\n\nexport const Favourite = ({\n  likes,\n  setLikes,\n  setFullScreenImg,\n  setOpenFullScreen\n}) => {\n  const removePhoto = (event) => {\n    const removeIcon = event.target;\n    const { src } = removeIcon.nextSibling;\n    const likedPhoto = removeIcon.parentElement;\n\n    likedPhoto.style.opacity = 0;\n    setTimeout(() => {\n      setLikes(likes.filter(photo => photo !== src));\n    }, 400);\n  };\n\n  const fullScreen = (event) => {\n    const image = event.target.parentElement;\n    const { src } = image.querySelector('img');\n\n    setFullScreenImg(src);\n    setOpenFullScreen(true);\n  };\n\n  return (\n    <>\n      {likes.length === 0\n        ? (\n          <div className=\"no-likes\">\n            <span className=\"title\">No favorite photos yet!</span>\n            <span className=\"smile\">&#129320;</span>\n          </div>\n        )\n        : (\n          <div className=\"likes-photos\">\n            {likes.map(photo => (\n              <div\n                key={photo}\n                className=\"likes-photo\"\n              >\n                <div\n                  className=\"remove-photo\"\n                  onClick={removePhoto}\n                >\n                  &#10006;\n                </div>\n                <img src={photo} alt=\"something-beauty\" />\n                <span\n                  className=\"fullscreen-icon\"\n                  onClick={fullScreen}\n                >\n                  &#x26F6;\n                </span>\n              </div>\n            ))}\n          </div>\n        )}\n    </>\n  );\n};\n","import React from 'react';\nimport './FullScreen.css';\n\nexport const FullScreen = ({\n  fullScreenImg,\n  openFullScreen,\n  closeFullScreen\n}) => {\n  return (\n    <div\n      className=\"full-screen\"\n      style={{ display: openFullScreen ? 'flex' : 'none' }}\n      onClick={closeFullScreen}\n    >\n      <img src={fullScreenImg} alt=\"full-img\" />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport useLocalStorage from './components/useLocalStorage';\nimport './App.css';\n\nimport { Navigation } from './components/Navigation';\nimport { Gallery } from './components/Gallery';\nimport { Favourite } from './components/Favourite';\nimport { FullScreen } from './components/FullScreen';\n\nfunction App() {\n  const [fullScreenImg, setFullScreenImg] = useState('');\n  const [openFullScreen, setOpenFullScreen] = useState(false);\n  const [likes, setLikes] = useLocalStorage('photo', []);\n  const [favouriteOn, setFavouriteOn] = useLocalStorage('favourite-on', false);\n\n  const closeFullScreen = (event) => {\n    if (event.currentTarget === event.target) {\n      setOpenFullScreen(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Photo gallery</h1>\n      <Navigation\n        favouriteOn={favouriteOn}\n        setFavouriteOn={setFavouriteOn}\n      />\n      <FullScreen\n        fullScreenImg={fullScreenImg}\n        openFullScreen={openFullScreen}\n        closeFullScreen={closeFullScreen}\n      />\n      {!favouriteOn\n        ? (\n          <Gallery\n            likes={likes}\n            setLikes={setLikes}\n            setFullScreenImg={setFullScreenImg}\n            setOpenFullScreen={setOpenFullScreen}\n          />\n        )\n        : (\n          <Favourite\n            likes={likes}\n            setLikes={setLikes}\n            setFullScreenImg={setFullScreenImg}\n            setOpenFullScreen={setOpenFullScreen}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}